'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

exports.mapConfToUserHandler = mapConfToUserHandler;

var _userHandlerError = require('./errors/user-handler-error');

var _userHandlerError2 = _interopRequireDefault(_userHandlerError);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function mapConfToUserHandler(conf) {

  return new Promise(function (resolve, reject) {
    var mappedItems = conf.map(function (item, itemIndex) {
      if (item.handler) {
        try {
          var handledResult = item.handler(item._result);

          if (!handledResult || (typeof handledResult === 'undefined' ? 'undefined' : _typeof(handledResult)) !== 'object') {
            return reject(new _userHandlerError2.default('the handler function did not return an object', { itemIndex: itemIndex }));
          }

          item._result = handledResult;
        } catch (e) {
          reject(new _userHandlerError2.default('there was an error processing using a handler', { itemIndex: itemIndex }));
        }
      }

      return item;
    });

    resolve(mappedItems);
  });
}